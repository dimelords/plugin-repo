name: Build Plugins

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Triggers on tags starting with 'v', e.g., v1.0.0
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch all history and tags
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Update manifest branch reference
      run: |
        # Use tag if available, otherwise use branch name
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          REF=${GITHUB_REF#refs/tags/}
        else
          REF=${{ github.ref_name }}
        fi
        
        for manifest in manifests/*.manifest.js; do
          sed -i "s/@[^/]*\/dist/@${REF}\/dist/g" "$manifest"
        done
    
    - name: Build plugins
      run: npm run build
      
    - name: Commit and push dist
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Handle branch/tag scenarios
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          TAG_NAME=${GITHUB_REF#refs/tags/}
          TEMP_BRANCH="temp-${TAG_NAME}"
          git checkout -b "$TEMP_BRANCH"
          git push origin "$TEMP_BRANCH"
          git branch --set-upstream-to=origin/$TEMP_BRANCH "$TEMP_BRANCH"
        else
          # Ensure we're on the correct branch
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          git checkout -B "$BRANCH_NAME"
          git pull origin "$BRANCH_NAME"
        fi
        
        # Add and commit changes
        git add -f dist/
        git add manifests/*.manifest.js
        git commit -m "chore: update dist files and manifests" || echo "No changes to commit"
        
        # Push changes
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          git push origin "$TEMP_BRANCH"
          git tag -f "$TAG_NAME"
          git push --force origin "$TAG_NAME"
          git push origin --delete "$TEMP_BRANCH"
        else
          git push origin "$BRANCH_NAME"
        fi
        
    - name: Purge jsDelivr cache
      run: |
        # Get list of changed files
        CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)
        
        # Function to purge cache for a file
        purge_cache() {
          local file=$1
          # Use tag if available, otherwise use main
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            REF=${GITHUB_REF#refs/tags/}
          else
            REF="main"
          fi
          local jsdelivr_url="https://cdn.jsdelivr.net/gh/dimelords/plugin-repo@${REF}/${file}"
          echo "Purging cache for ${jsdelivr_url}"
          curl -X POST "https://purge.jsdelivr.net/${jsdelivr_url}"
        }
        
        # Purge cache for each changed file in dist/ and manifests/
        echo "$CHANGED_FILES" | while read -r file; do
          if [[ $file == dist/* ]] || [[ $file == manifests/* ]]; then
            purge_cache "$file"
          fi
        done
